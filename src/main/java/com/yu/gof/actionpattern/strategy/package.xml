<html>
	<p>开闭原则</p>
	<p>
		1、软件中的对象（类，模块，函数等等）应该对于扩展是开放的，但是对于修改是封闭的
		2、原则要求就是允许扩展，拒绝修改
	</p>
	
	<p>
		示例：专卖店买东西，根据不同客户的vip等级，享受不同的折扣。
		1、不根据用户等级，在用户接口中通过if else方式去获取折扣
		2、根据不同用户等级，建立不同等级的接口，各自实现对应等级的折扣
	</p>
	
	<p>
		示例：商店针对客户等级，不同折扣问题。vip1客户打95折，vip2客户打9折，vip3客户打88折。
	</p>
	
	<p>总结：
		策略模式是一个很好的封装各种复杂处理的设计模式，让使用者根据自己的选择来选中策略，而不用修改其他代码。当策略太多的时候，
		可能造成使用方变得复杂、难管理多个策略的问题，利用工厂方法模式可以很好的解决这个难题。这其中也是一个见招拆招的问题，
		设计模式在真正运用中也是这样子的，遇到问题使用恰当的设计模式去解决问题。
	</p>
</html>