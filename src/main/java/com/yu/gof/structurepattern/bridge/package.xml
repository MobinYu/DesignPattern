<html>
	<p>结构型模式 - 桥接模式</p>
	<p>
		将抽象和实现解耦，使得两者可以独立地变化。它通过提供抽象化和实现化之间的桥接结构，来实现二者的解耦。
		这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。这两种类型的类可被结构化改变而互不影响。
	</p>
	
	<p>
		主要解决：在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。

		何时使用：实现系统可能有多个角度分类，每一种角度都可能变化。
		
		如何解决：把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。
		
		关键代码：抽象类依赖实现类。
	</p>
	
	<p>
		注意事项：对于两个独立变化的维度，使用桥接模式再适合不过了。
	</p>
	
	<p>
		示例：
			1、手机中有系统、有软件、有打开软件的方法，抽象手机有openSoftware()方法，具体手机也是调用软件的 open() 方法，并没有自己实现打开逻辑，也就是解耦了这个打开软件过程。
			
			说明：因为它将打开软件的具体实现放到了软件实现里面，而不是放在了手机，通过聚合方式（聚合关联关系建立在抽象层）去调用软件打开的方法，这就像一条桥一样连接手机和软件。
	</p>
	
</html>